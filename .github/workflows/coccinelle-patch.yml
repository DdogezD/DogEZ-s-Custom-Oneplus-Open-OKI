name: KernelSU Next with scope-minimized manual hooks
on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "分支"
        required: true
        default: 'sm8550'
      FEIL:
        description: "配置文件"
        required: true
        default: 'oneplus_open_v'
      CPUD:
        description: "处理器代号"
        required: true
        default: 'kalama'
      ANDROID_VERSION:
        description: "内核安卓版本"
        required: true
        default: 'android13'
      KERNEL_VERSION:
        description: "内核版本"
        required: true
        default: '5.15'
      KERNEL_NAME:
        description: "自定义 Linux version 字符串"
        required: true
        default: '-android13-8-o-01129-g2e2297c38782'
      KERNEL_VER:
        description: "自定义 KernelSU 版本号"
        required: true
        default: 'default'
      TMPFS_XATTR:
        description: "覆写 tmpfs 支持扩展属性"
        required: true
        type: choice
        options:
          - 'ON'
          - 'OFF'
        default: 'ON'
      BBR_ALGORITHM:
        description: "是否使 bbr 算法可用"
        required: true
        type: choice
        options:
          - 'ON'
          - 'OFF'
        default: 'ON'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Configure Git
        run: |
          git config --global user.name "DogEZ"
          git config --global user.email "DdogezD@gmail.com"

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y python3 git curl ocaml ocaml-findlib opam
          sudo apt install -y libpcre3-dev pkg-config
          opam init -y --disable-sandboxing
          eval $(opam env)
          opam update
          opam install -y --assume-depexts coccinelle.1.3.0

      - name: Install repo tool
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo and sync
        run: |
          mkdir kernel_workspace && cd kernel_workspace
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/${{ github.event.inputs.CPU }} -m ${{ github.event.inputs.FEIL }}.xml --depth=1
          repo sync
          rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
          rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
          sed -i 's/ -dirty//g' kernel_platform/common/scripts/setlocalversion
          sed -i 's/ -dirty//g' kernel_platform/msm-kernel/scripts/setlocalversion

      - name: Patch Kernel by Coccinelle
        run: |
          cd kernel_workspace
          git clone https://github.com/DdogezD/kernelsu-coccinelle
          cd kernelsu-coccinelle/scope-minimized-hooks
          eval $(opam env)
          ./apply.sh ../../kernel_platform/common

      - name: Add KernelSU Next
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/DdogezD/KernelSU-Next-kpm2main/next/kernel/setup.sh" | bash -
          cd ./KernelSU-Next
          MAKE_FILE="kernel/Makefile"
          DEFAULT_VERSION=11998
          if [[ "$KERNEL_VER" == "default" ]]; then
            KSU_VERSION=$(($(git rev-list --count HEAD) + 10200))
          else
            KSU_VERSION="$KERNEL_VER"
          fi
          sed -i "s/^DKSU_VERSION.*/DKSU_VERSION=${KSU_VERSION}/" "${MAKE_FILE}"
          echo "KSUVER=${KSU_VERSION}" >> $GITHUB_ENV

      - name: Add configuration settings
        run: |
          cd kernel_workspace/kernel_platform
          echo "CONFIG_KSU_KPROBES_HOOK=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KALLSYMS=y" >> ./common/arch/arm64/configs/gki_defconfig
          if [ "${{ github.event.inputs.TMPFS_XATTR }}" == "ON" ]; then
            echo "CONFIG_TMPFS_XATTR=y" >> ./common/arch/arm64/configs/gki_defconfig
          fi
          if [ "${{ github.event.inputs.BBR_ALGORITHM }}" == "ON" ]; then
            echo "CONFIG_TCP_CONG_ADVANCED=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_TCP_CONG_BBR=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_NET_SCH_FQ=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_TCP_CONG_BIC=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_TCP_CONG_WESTWOOD=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_TCP_CONG_HTCP=n" >> ./common/arch/arm64/configs/gki_defconfig
          fi
          sed -i 's/check_defconfig//' ./common/build.config.gki

      - name: Set Linux version
        run: |
          cd kernel_workspace/kernel_platform
          sed -i '$s|echo "\$res"|echo "\${{ github.event.inputs.KERNEL_NAME }}"|' ./common/scripts/setlocalversion
          sed -i "/stable_scmversion_cmd/s/-maybe-dirty//g" ./build/kernel/kleaf/impl/stamp.bzl
          
      - name: Build kernel
        run: |
          cd kernel_workspace
          LTO=thin ./kernel_platform/oplus/build/oplus_build_kernel.sh ${{ github.event.inputs.CPUD }} gki

      - name: Intergate SukiSU KPM
        run: |
          cd kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/dist/
          curl -LSs "https://raw.githubusercontent.com/DdogezD/SukiSU_patch/refs/heads/main/kpm/patch_linux" -o patch_linux
          chmod +x patch_linux
          ./patch_linux
          cp oImage kernel_workspace/kernel

      - name: Upload image
        uses: actions/upload-artifact@v4
        with:
          name: Image-KernelSU-Next-KPM_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}
          path: kernel_workspace/kernel
